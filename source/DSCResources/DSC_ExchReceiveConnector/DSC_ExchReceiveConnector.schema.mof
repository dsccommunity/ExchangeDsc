[ClassVersion("1.0.0.0."), FriendlyName("ExchReceiveConnector")]
class DSC_ExchReceiveConnector : OMI_BaseResource
{
    [Key, Description("Identity of the Receive Connector. Needs to be in format SERVERNAME\\\\CONNECTORNAME (no quotes).")] String Identity;
    [Required, Description("Credentials used to establish a remote PowerShell session to Exchange."), EmbeddedInstance("MSFT_Credential")] String Credential;
    [Required, Description("Whether the connector should be present or not."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("Specifies whether the SMTP server name, port number, and authentication settings for the Receive connector are displayed to users in the options of Outlook on the web.")] Boolean AdvertiseClientSettings;
    [Write, Description("Specifies the advertised and accepted authentication mechanisms for the Receive connector."), ValueMap{"None","Tls","Integrated","BasicAuth","BasicAuthRequireTLS","ExchangeServer","ExternalAuthoritative"}, Values{"None","Tls","Integrated","BasicAuth","BasicAuthRequireTLS","ExchangeServer","ExternalAuthoritative"}] String AuthMechanism[];
    [Write, Description("Specifies the period of time to delay responses to failed authentication attempts from remote servers.")] String AuthTarpitInterval;
    [Write, Description("Specifies a custom SMTP 220 banner that's displayed to remote messaging servers.")] String Banner;
    [Write, Description("Specifies whether this Receive connector rejects messages that contain line feed (LF) characters without immediately preceding carriage return characters (CR) in the SMTP DATA stream.")] Boolean BareLinefeedRejectionEnabled;
    [Write, Description("Specifies whether the BINARYMIME Extended SMTP extension is enabled or disabled.")] Boolean BinaryMimeEnabled;
    [Write, Description("Specifies the local IP address and TCP port number that's used by the Receive connector.")] String Bindings[];
    [Write, Description("Specifies whether the CHUNKING Extended SMTP extension is enabled or disabled.")] Boolean ChunkingEnabled;
    [Write, Description("Specifies an optional comment.")] String Comment;
    [Write, Description("Specifies the maximum amount of idle time before a connection to the Receive connector is closed.")] String ConnectionInactivityTimeout;
    [Write, Description("Specifies the maximum time that the connection to the Receive connector can remain open, even if the connection is actively transmitting data.")] String ConnectionTimeout;
    [Write, Description("Specifies the default accepted domain to use for the Exchange organization.")] String DefaultDomain;
    [Write, Description("Specifies whether the DSN (delivery status notification) Extended SMTP extension is enabled or disabled on the Receive connector.")] Boolean DeliveryStatusNotificationEnabled;
    [Write, Description("Specifies the domain controller that's used by this cmdlet to read data from or write data to Active Directory.")] String DomainController;
    [Write, Description("Specifies whether to enable or disable mutual Transport Layer Security (TLS) authentication.")] Boolean DomainSecureEnabled;
    [Write, Description("Specifies whether the 8BITMIME Extended SMTP extension is enabled or disabled.")] Boolean EightBitMimeEnabled;
    [Write, Description("enables or disables Kerberos when Integrated Windows authentication is available on the Receive connector.")] Boolean EnableAuthGSSAPI;
    [Write, Description("Specifies whether to enable or disable the Receive connector.")] Boolean Enabled;
    [Write, Description("Specifies whether the ENHANCEDSTATUSCODES Extended SMTP extension is enabled or disabled.")] Boolean EnhancedStatusCodesEnabled;
    [Write, Description("Additional allow permissions."), EmbeddedInstance("MSFT_KeyValuePair")] String ExtendedRightAllowEntries[];
    [Write, Description("Additional denz permissions."), EmbeddedInstance("MSFT_KeyValuePair")] String ExtendedRightDenyEntries[];
    [Write, Description("Specifies how you want to use Extended Protection for Authentication on the Receive connector."), ValueMap{"None","Allow","Require"}, Values{"None","Allow","Require"}] String ExtendedProtectionPolicy;
    [Write, Description("Specifies the destination FQDN that's shown to connected messaging servers.")] String Fqdn;
    [Write, Description("Specifies whether the Receive connector accepts long X.400 email addresses.")] Boolean LongAddressesEnabled;
    [Write, Description("Specifies the period the transport server delays acknowledgement when receiving messages from a host that doesn't support shadow redundancy.")] String MaxAcknowledgementDelay;
    [Write, Description("Specifies the maximum size of the SMTP message header before the Receive connector closes the connection.")] String MaxHeaderSize;
    [Write, Description("Specifies the maximum number of hops that a message can take before the message is rejected by the Receive connector.")] Sint32 MaxHopCount;
    [Write, Description("Specifies the maximum number of inbound connections that this Receive connector serves at the same time.")] String MaxInboundConnection;
    [Write, Description("Specifies the maximum number of connections that this Receive connector serves at the same time from a single IP address.")] Sint32 MaxInboundConnectionPercentagePerSource;
    [Write, Description("Specifies the maximum number of connections that a Receive connector serves at the same time from a single IP address, expressed as the percentage of available remaining connections on a Receive connector.")] String MaxInboundConnectionPerSource;
    [Write, Description("Specifies the maximum number of local hops that a message can take before the message is rejected by the Receive connector.")] Sint32 MaxLocalHopCount;
    [Write, Description("pecifies the number of logon failures that the Receive connector retries before it closes the connection.")] Sint32 MaxLogonFailures;
    [Write, Description("Specifies the maximum size of a message that's allowed through the Receive connector.")] String MaxMessageSize;
    [Write, Description("Specifies the maximum number of SMTP protocol errors that the Receive connector accepts before closing the connection.")] String MaxProtocolErrors;
    [Write, Description("Specifies the maximum number of recipients per message that the Receive connector accepts before closing the connection.")] Sint32 MaxRecipientsPerMessage;
    [Write, Description("Specifies the maximum number of messages that can be sent by a single client IP address per minute.")] String MessageRateLimit;
    [Write, Description("Specifies how the message submission rate is calculated."), ValueMap{"None","IPAddress","User","All"}, Values{"None","IPAddress","User","All"}] String MessageRateSource;
    [Write, Description("enables or disables Originator Requested Alternate Recipient (ORAR) on the Receive connector.")] Boolean OrarEnabled;
    [Write, Description("Specifies the well-known security principals who are authorized to use the Receive connector and the permissions that are assigned to them."), ValueMap{"None","AnonymousUsers","ExchangeUsers","ExchangeServers","ExchangeLegacyServers","Partners","Custom"}, Values{"None","AnonymousUsers","ExchangeUsers","ExchangeServers","ExchangeLegacyServers","Partners","Custom"}] String PermissionGroups[];
    [Write, Description("Specifies whether the PIPELINING Extended SMTP extension is enabled or disabled.")] Boolean PipeliningEnabled;
    [Write, Description("pecifies whether to enable or disable protocol logging."), ValueMap{"None","Verbose"}, Values{"None","Verbose"}] String ProtocolLoggingLevel;
    [Write, Description("Specifies the remote IP addresses that the Receive connector accepts messages from.")] String RemoteIPRanges[];
    [Write, Description("Specifies whether the client must provide a domain name in the EHLO handshake after the SMTP connection is established.")] Boolean RequireEHLODomain;
    [Write, Description("Specifies whether to require TLS transmission for inbound messages.")] Boolean RequireTLS;
    [Write, Description("Specifies the service discovery fully-qualified domain name (FQDN)")] String ServiceDiscoveryFqdn;
    [Write, Description("Specifies how the SIZE Extended SMTP extension is used on the Receive connector."), ValueMap{"Enabled","Disabled","EnabledWithoutValue"}, Values{"Enabled","Disabled","EnabledWithoutValue"}] String SizeEnabled;
    [Write, Description("Specifies whether the X-ANONYMOUSTLS Extended SMTP extension is enabled or disabled.")] Boolean SuppressXAnonymousTls;
    [Write, Description("Specifies the period of time to delay an SMTP response to a remote server that may be abusing the connection.")] String TarpitInterval;
    [Write, Description("Specifies the X.509 certificate to use for TLS encryption.")] String TlsCertificateName;
    [Write, Description("Specifies the capabilities that the Receive connector makes available to specific hosts outside of the organization.")] String TlsDomainCapabilities[];
    [Write, Description("Specifies the transport service on the Mailbox server where the Receive connector is created."), ValueMap{"FrontendTransport","HubTransport"}, Values{"FrontendTransport","HubTransport"}] String TransportRole;
    [Write, Description("Specifies the default permission groups and authentication methods that are assigned to the Receive connector."), ValueMap{"Client","Internal","Internet","Partner","Custom"}, Values{"Client","Internal","Internet","Partner","Custom"}] String Usage;
};
